version: '3.8'

services:

  app:
    build:
      context: .
      dockerfile: ./dockerfile.app
    ports:
      - "8501:8501"
  train:
    build:
      context: ./src/text_to_image_devia/models
      dockerfile: ./DockerFile
    ports:
      - "6080:6080"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    #restart: always

  #serve:
  #  image: tensorflow/serving:nightly-gpu
  #  ports:
  #    - "8501:8501"
  #  volumes:
  #    - /tmp/resnet:/models/resnet
  #  environment:
  #    - MODEL_NAME=resnet
  #  
  #  restart: no

  
  mlflow-server:
    build: 
      context: ./src/text_to_image_devia/experiments
    ports:
      - "5000:5000"
    environment:
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=password
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    volumes:
      - /mlflow:/mlflow-artifacts
    expose:
      - "5000"
    entrypoint: mlflow server --backend-store-uri postgresql+psycopg2://airflow:airflow@postgres/mlflow --default-artifact-root mlflow-artifacts:/ --artifacts-destination s3://mlflow/ --host 0.0.0.0
    depends_on:
      - postgres
      - minio

  postgres:
    build:
      context: .
      dockerfile : Dockerfile.postgres
    environment:
      PGPASSWORD: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    hostname: postgres
    healthcheck:
      test: ["CMD", "pg_isready","-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s

  pgadmin:
   image: dpage/pgadmin4:8.6
   ports:
     - "5050:5050"
   environment:
     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
     PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT-5050}
   volumes :
     - pgadmin-data:/var/lib/pgadmin

  minio:
    image: 'minio/minio:latest'
    ports:
      - '${FORWARD_MINIO_PORT:-9000}:9000'
      - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: mlflow
      MINIO_ROOT_PASSWORD: password
    volumes:
      - /mlflow-minio:/data/minio 
    command: 'minio server /mlflow-minio --console-address ":8900"'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:9000/minio/health/live'
      retries: 3
      timeout: 5s

networks:
  default:
    external: true
    name: mlflow
    driver: overlay

volumes:
  postgres-db-volume:
    driver: local

  mlflow-minio:

  pgadmin-data:

  pg-init-scripts:

  mlflow:
  

